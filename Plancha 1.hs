-------------------------------------------------------------------------------------

cincoInt::Int->Int
cincoInt x = 5

-------------------------------------------------------------------------------------

cincoChar::Char->Int
cincoChar x = 5

-------------------------------------------------------------------------------------

cincoBool::Bool->Int
cincoBool x = 5

-------------------------------------------------------------------------------------

odd'::Int->Bool
odd' x = (mod x 2)==1

-------------------------------------------------------------------------------------

even'::Int->Bool
even' x = (not . odd') x 

-------------------------------------------------------------------------------------

square'::Int->Int 
square' x = x*x

-------------------------------------------------------------------------------------

absolute'::Float->Float
absolute' x = if x > 0 then x else  x * (-1)

-------------------------------------------------------------------------------------

signa::Int->Int
signa x = if x > 0 then 1 else if x<0 then (-1) else 0

-------------------------------------------------------------------------------------

suc::Int->Int
suc x = x+1

-------------------------------------------------------------------------------------

predecesor::Int->Int
predecesor x = x-1

-------------------------------------------------------------------------------------

predecesorNat::Int->Int
predecesorNat x = if x <= 0 then 0 else x-1

-------------------------------------------------------------------------------------

idenInt:: Int->Int
idenInt x=x

-------------------------------------------------------------------------------------

idenChar:: Char->Char
idenChar x=x

-------------------------------------------------------------------------------------

idenBool::Bool->Bool
idenBool x=x

-------------------------------------------------------------------------------------

double:: Int->Int
double x=x*2

-------------------------------------------------------------------------------------


roots:: Float->Float->Float
roots x y = (-x)/y

-------------------------------------------------------------------------------------

promedio3:: Float->Float->Float->Float
promedio3 x y z = (x+y+z)/3

-------------------------------------------------------------------------------------

xor::Bool->Bool->Bool
xor x y = if x == y then False else True

-------------------------------------------------------------------------------------

modulo::(Float,Float)->Float
modulo x = sqrt(((fst x)^^2)+((snd x)^^2))

-------------------------------------------------------------------------------------
